const { Markup } = require("telegraf");

const User = require("../../mongoose/model-user");

const { delMessages, addMessage } = require("../../message-utils");

/* Текст подразделов курса */
const text_1cb_a_b_c_t_p = `<b>⭐ Компания:</b> 1С-Битрикс\n<b>✍ Курс:</b> Администратор. Бизнес\n⛳ <b>Подраздел:</b> Валюты, Торговый каталог, Товарный маркетинг\n
▶ <b>Если в системе выполнена конвертация скидок и используются только правила работы с корзиной, то купоны могут быть созданы:</b>\n  • как для правил работы с корзиной, так и для скидок, созданных через пресеты\n
▶ <b>В состав комплекта не могут входить:</b>\n  • товары с торговыми предложениями\n
▶ <b>Списание зарезервированного товара осуществляется при:</b>\n  • отгрузке заказа\n
▶ <b>Отбор торговых предложений может выполняться по свойствам каких типов?</b>\n  • Справочник\n  • Список\n
▶ <b>В карточке товара поле «Зарезервированное количество» не отображается, если:</b>\n  • отключено резервирование товаров\n
▶ <b>Если в системе отключен количественный учет, то:</b>\n  • товары всегда доступны к покупке в любом количестве\n
▶ <b>В умном фильтре могут быть отображены свойства:</b>\n  • товаров каталога\n  • торговых предложений\n
▶ <b>В каком виде учета товарооборот осуществляется с помощью документов внутри системы?</b>\n  • складском\n
▶ <b>При выполнении какой операции информация из документов складского учета отразится непосредственно на товарах каталога?</b>\n  • при проведении документа\n
▶ <b>Для чего в карточке товара на закладке «Склады» доступно управление количеством товара?</b>\n  • для указания вручную остатков товара при отключенном складском учете\n
▶ <b>При выполнении каких операций фасетный индекс будет пересоздан автоматически?</b>\n  • при добавлении новых товаров\n  • при редактировании товаров\n
▶ <b>Информер курса валют позволяет:</b>\n  • вывести курс валют с ЦБ РФ\n  • вывести курс валют сайта\n
▶ <b>Базовая валюта - это валюта,</b>\n  • относительно которой рассчитываются другие валюты\n  • номинал которой равен ее курсу\n  • которая обязательно должна присутствовать в системе\n
▶ <b>Если в форме настройки валюты нет ее представления на нужном вам языке, значит:</b>\n  • в системе не добавлен данный язык\n
▶ <b>На работу в режиме торгового каталога могут быть настроены:</b>\n  • любые информационные блоки\n
▶ <b>Форма редактирования товара торгового каталога позволяет настроить:</b>\n  • вес единицы товара\n  • значения типов цен для товара\n  • ставку НДС\n
▶ <b>Настройку инфоблока на работу в режиме торгового каталога можно выполнить:</b>\n  • на странице настроек модуля "Торговый каталог"\n  • в форме настройки параметров информационного блока (отдельно для каждого инфоблока)\n`;

const text_1cb_a_b_i_m = `<b>⭐ Компания:</b> 1С-Битрикс\n<b>✍ Курс:</b> Администратор. Бизнес\n⛳ <b>Подраздел:</b> Интернет-Магазин\n
▶ <b>Уровень вложенности местоположений 2.0 при импорте с сервера компании "1С-Битрикс":</b>\n  • ограничен типом местоположения "Улица"\n
▶ <b>Ограничения могут быть составлены:</b>\n  • как для платежных систем, так и для служб доставки\n
▶ <b>Непосредственно в процессе создания заказа может быть создано несколько:</b>\n  • документов оплат\n
▶ <b>Сколько оплат может быть создано в рамках одного заказа?</b>\n  • неограниченное количество\n
▶ <b>Какие типы статусов доступны в системе?</b>\n  • заказ\n  • доставка\n
▶ <b>В каких разделах можно посмотреть информацию по брошенным корзинам пользователей?</b>\n  • 2\n  • 3\n
▶ <b>Может ли базовая цена использоваться в качестве оптовой?</b>\n  • да\n
▶ <b>Что необходимо сделать, чтобы освободить пользователя от налогов?</b>\n  • создать группу пользователей освобожденных от налога, перейти на страницу "Освобождение от налогов" и изменить пункт освобождение от налогов, указав какие налоги не должны взиматься\n
▶ <b>Обязательные для добавления данные для работы интернет-магазина:</b>\n  • типы плательщиков;\n  • типы плательщиков;\n  • статусы заказов;\n  • местоположения;\n  • платежные системы;\n  • группы свойств заказов;\n  • службы доставки;\n  • свойства заказов;\n
▶ <b>Для корректного функционирования модуля Интернет-магазин необходимо</b>\n  • хотя бы одна установленная валюта\n
▶ <b>Планы аффилиатов делятся по:</b>\n  • количеству продаж\n  • сумме продаж\n
▶ <b>Если одновременно указана ставка НДС для товара и ставка для всего каталога, то для данного товара будет действовать:</b>\n  • персональная ставка НДС\n
▶ <b>При импорте CSV система посчитает за один и тот же товар те позиции в файле в которых:</b>\n  • совпадают параметры поля Уникальный идентификатор\n
▶ <b>Экспорт товаров с учетом группировки цен в зависимости от количества приобретаемого товара, а также с учетом валюты, указанной для каждой цены товара, осуществляется в формате:</b>\n  • CSV (new)\n
▶ <b>Ставка НДС может быть задана для:</b>\n  • товара\n  • каталога товаров\n
▶ <b>Какие статусы нельзя удалить?</b>\n  • F (Выполнен)\n  • N (Принят)\n  • DN (Ожидает обработки)\n  • DF (Отгружен)\n
▶ <b>Например, аффилиат "B" зарегистрировался в системе с пирамидой через аффилиата "A", тогда:</b>\n  • аффилиат "A" будет получать прибыль не только за свои продажи, но и за продажи аффилиата "B"\n  • аффилиат "B" будет получать прибыль только за свои продажи\n
▶ <b>Модуль "Интернет-магазин" не сможет функционировать если:</b>\n  • в системе не установлен модуль "Валюты", с помощью которого производится настройка валют\n  • в системе не задана хотя бы одна валюта\n
▶ <b>Каким образом при изменении наценки автоматически обновить цены всех товаров, к которым она применена?</b>\n  • Это произойдет если при сохранении новых параметров наценки отметить опцию Пересчитать цены.\n
▶ <b>В поле "Валюта сумм" формы "Параметры пластиковой карты" указывается:</b>\n  • валюты минимальной и максимальной сумм, которые можно снять с карты\n
▶ <b>Если у типа плательщика не будет задано свойство с флагом "Использовать как местоположение для налогов ", то:</b>\n  • у этого типа плательщика ставки налогов определены не будут.\n
▶ <b>Какое количество аффилиатстких пирамид может быть настроено в продукте?</b>\n  • В соответствии с числом сайтов\n
▶ <b>Какие типы данных в магазине могут зависеть от типа плательщиков?</b>\n  • платежные системы\n  • свойства заказа\n  • службы доставки\n
▶ <b>Как настроить платежную систему, чтобы она была доступна только определенному типу плательщиков?</b>\n  • составить ограничение по данному типу плательщиков для платежной системы\n`;

const text_1cb_a_b_cas = `<b>⭐ Компания:</b> 1С-Битрикс\n<b>✍ Курс:</b> Администратор. Бизнес\n⛳ <b>Подраздел:</b> Валюты, Торговый каталог, Товарный маркетинг\n
▶ <b>Если касса подключена через приложение "1С-Битрикс.Кассы" и работает только на интернет-магазин, то закрытие смены и печать z-отчета выполняются:</b>\n  • вручную (при необходимости) с помощью кнопки "Добавить новый Z-отчет", копия z-отчета доступна на странице Магазин > Кассы > Z-отчеты\n  • автоматически (в соответствии с параметром "Время закрытия смены и печати z-отчета"), копия z-отчета доступна на странице Магазин > Кассы > Z-отчеты\n
▶ <b>Как выполнить частичный возврат?</b>\n  • Сделать полный возврат, скопировать старый заказ, убрать ненужные позиции и сохранить новый заказ, после новой оплаты заново напечатать чек.\n
▶ <b>Как печатать чек для наличного расчета?</b>\n  • Создать платежную систему "Оплата наличными", установить флаг "Разрешить печать чеков". При получении оплаты перевести статус заказа в "Оплачено", и подключенная касса сразу напечатает чек.\n
▶ <b>Для печати чеков необходимо установить флаг "Разрешить печать чеков" в настройках платежных систем, если касса подключена:</b>\n  • через онлайн-сервисы\n  • через приложение "1С-Битрикс.Кассы"\n  • через интеграцию с "1С"\n
▶ <b>Открытие кассовой смены выполняется кассиром вручную в следующих случаях:</b>\n  • если касса подключена через приложение "1С-Битрикс.Кассы" и дополнительно используется оффлайн, а первый чек печатается вручную (не через интернет-магазин)\n  • если касса подключена к "1С"\n
▶ <b>Где в административной части интернет-магазина можно получить сгенерированную ссылку для подключения кассы?</b>\n  • На странице Магазин > Кассы > Список касс при нажатии кнопки "Сгенерировать ссылку"\n  • На странице Магазин > Кассы при нажатии кнопки "Подключить ККМ к интернет-магазину"\n
▶ <b>В приложении "1С-Битрикс.Кассы" для подключения трёх ККМ к одному интернет-магазину нужно запустить:</b>\n  • три worker-процесса и один dispatcher-процесс\n`;

const run_action_1c_bitrix_admin_business = (bot) => {
  bot.action("action_1c_bitrix_admin_business", (ctx) => {
    delMessages(ctx);
    return Promise.all([
      ctx.replyWithHTML(
        "⭐ <b>Компания:</b> 1С-Битрикс\n✍ <b>Курс:</b> Администратор. Бизнес\n\nВыберите необходимый подраздел курса:",
        Markup.inlineKeyboard([
          [
            Markup.callbackButton(
              "Валюты, Торговый каталог, Товарный маркетинг (17)",
              "action_1cb_a_b_c_t_p"
            ),
          ],
          [
            Markup.callbackButton(
              "Интернет-магазин (24)",
              "action_1cb_a_b_i_m"
            ),
          ],
          [
            Markup.callbackButton(
              "Кассы (7)",
              "action_1cb_a_b_cas"
            ),
          ],
          [
            Markup.callbackButton("☰ Главное меню", "action_main"),
            Markup.callbackButton("⬅ Назад", "action_1c_bitrix"),
          ],
        ]).extra()
      ),
    ]).then((results) => addMessage(results[0].message_id));
  });

  const showMessages = async (textArray, ctx) => {
    for (i = 0; i < textArray.length; i++) {
      const results = await Promise.all([
        ctx.replyWithHTML(
          textArray[i],
          i + 1 < textArray.length
            ? null
            : Markup.inlineKeyboard([
                [
                  Markup.callbackButton("☰ Главное меню", "action_main"),
                  Markup.callbackButton(
                    "⬅ Назад",
                    "action_1c_bitrix_admin_business"
                  ),
                ],
              ]).extra()
        ),
      ]);
      addMessage(results[0].message_id);
    }
  }

  const createAction = (action, ...text) => {
    bot.action(action, (ctx) => {
      // Пробуем найти в базе данный ChatId
      User.findOne({ chatId: String(ctx.from.id) })
        .then((res) => {
          if (res !== null) {
            if (
              res.payed.includes("action_1c_bitrix") ||
              res.payed.includes(action)
            ) {
              delMessages(ctx);
              showMessages(text, ctx);
            } else {
              // Если клиент есть в базе, но подписка не оформлена
              delMessages(ctx);
              return Promise.all([
                ctx.replyWithHTML(
                  `ℹ Для получения доступа в этот подраздел необходимо приобрести подписку.\n\nВы можете приобрести подписку как на отдельный подраздел курса, либо приобрести <b>полный доступ</b> ко всем курсам компании <b>1С-Битрикс</b>.`,
                  Markup.inlineKeyboard([
                    [
                      Markup.callbackButton(
                        "💳 Оплатить за подраздел 75 руб",
                        `pay_${action}`
                      ),
                    ],
                    [
                      Markup.callbackButton(
                        "💳 Оплатить полный доступ за 300 руб",
                        "pay_action_1c_bitrix"
                      ),
                    ],
                    [
                      Markup.callbackButton("☰ Главное меню", "action_main"),
                      Markup.callbackButton(
                        "⬅ Назад",
                        "action_1c_bitrix_admin_business"
                      ),
                    ],
                  ]).extra()
                ),
              ]).then((results) => addMessage(results[0].message_id));
            }
          } else {
            // Если клиента нет в базе
            delMessages(ctx);
            return Promise.all([
              ctx.replyWithHTML(
                `ℹ Для получения доступа необходимо приобрести подписку. Подписка оплачивается разово и действует <b>бессрочно</b>.\n\nВы можете приобрести подписку как на отдельный подраздел курса, либо приобрести <b>полный доступ</b> ко всем курсам компании <b>1С-Битрикс</b>.`,
                Markup.inlineKeyboard([
                  [
                    Markup.callbackButton(
                      "💳 Оплатить за подраздел 75 руб",
                      `pay_${action}`
                    ),
                  ],
                  [
                    Markup.callbackButton(
                      "💳 Получить полный доступ за 300 руб",
                      "pay_action_1c_bitrix"
                    ),
                  ],
                  [
                    Markup.callbackButton("☰ Главное меню", "action_main"),
                    Markup.callbackButton(
                      "⬅ Назад",
                      "action_1c_bitrix_admin_business"
                    ),
                  ],
                ]).extra()
              ),
            ]).then((results) => addMessage(results[0].message_id));
          }
        })
        .catch((err) => {
          delMessages(ctx);
          return Promise.all([
            ctx.replyWithHTML(
              `⚠ Произошла ошибка:\n<b>${err.message}</b>\nПожалуйста, обратитесь к администратору @tiamin1989`,
              Markup.inlineKeyboard([
                [
                  Markup.callbackButton("☰ Главное меню", "action_main"),
                  Markup.callbackButton(
                    "⬅ Назад",
                    "action_1c_bitrix_admin_business"
                  ),
                ],
              ]).extra()
            ),
          ]).then((results) => addMessage(results[0].message_id));
        });
    });
  };

  createAction("action_1cb_a_b_c_t_p", text_1cb_a_b_c_t_p);
  createAction("action_1cb_a_b_i_m", text_1cb_a_b_i_m);
  createAction("action_1cb_a_b_cas", text_1cb_a_b_cas);
};

module.exports = {
  run_action_1c_bitrix_admin_business,
};
